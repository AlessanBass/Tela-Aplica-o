{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\LOTERIA-REACT\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // Configuração para requisições na rede\n\nimport web3 from \"./web3\"; // Informação do contrato\n\nimport loteria from \"./loteria\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // Cria variáveis e funções de alteração\n  const [gerente, setGerente] = useState(\"\");\n  const [jogadores, setJogadores] = useState(\"\");\n  const [saldo, setSaldo] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [mensagem, setMensagem] = useState(\"\"); //Alterei aqui\n\n  const [vencedor, setWinner] = useState(0); // Função assincrona que carrega os dados do contrato\n\n  const carregarDados = async () => {\n    // Pega a carteira do gerente do contrato\n    const _gerente = await loteria.methods.gerente().call(); // Pega a carteira dos jogadores\n\n\n    const _jogadores = await loteria.methods.getJogadores().call(); // Pega o valor total vinculado ao contrato\n\n\n    const _saldo = await web3.eth.getBalance(loteria.options.address); //Alterado aqui\n\n\n    const _vencedor = await loteria.methods.vencedor(); //console.log(_vencedor);\n    // Armazena os valores nas variáveis de gerente, jogador e saldo\n\n\n    setGerente(_gerente);\n    setJogadores(_jogadores);\n    setSaldo(_saldo);\n    setValue(\"\"); //vencedor = _vencedor;\n    //setWinner(_vencedor);\n  }; // Antes da página carregar ele chama seu conteúdo\n\n\n  useEffect(() => {\n    // Busca dados do contrato\n    carregarDados();\n  }, []); // * Realiza uma aposta\n\n  const apostar = async event => {\n    try {\n      // Evita que a página seja recarregada\n      event.preventDefault(); // Altera valor da mensagem exibida\n\n      setMensagem(\"Aguardando a  validação da transação...\"); // Pega contas do metamask\n\n      const contas = await web3.eth.getAccounts(); // console.log(contas);\n      // Joga passando valor da conta principal e o valor de ether em wei\n\n      await loteria.methods.jogar().send({\n        from: contas[0],\n        value: web3.utils.toWei(value, \"ether\")\n      }); // Recarrega dados da página\n\n      await carregarDados(); // Altera mensagem\n\n      setMensagem(\"Transação concluida!\");\n    } catch (error) {\n      // Caso o usuário cancele a solicitação no metamask\n      if (error.code === 4001) {\n        setMensagem(\"Transação cancelada!\");\n      } else {\n        // Caso algo esteja fora das políticas do contrato\n        setMensagem(\"Transação vai contra regras do contrato\");\n      }\n    }\n  }; // * Realiza sorteio\n\n\n  const sortear = async () => {\n    try {\n      // Altera mensagem\n      setMensagem(\"Aguardando processamento...\"); // Pega contas do metamask\n\n      const contas = await web3.eth.getAccounts(); // Solicita sorte e manda conta que está realizando o sorteio\n\n      await loteria.methods.sorteio().send({\n        from: contas[0]\n      }); // Recarrega dados da página\n\n      await carregarDados(); // Altera mensagem\n\n      setMensagem(\"Um vencedor foi escolhido!\");\n    } catch (error) {\n      // Caso o usuário cancele a solicitação no metamask\n      if (error.code === 4001) {\n        setMensagem(\"Transação cancelada!\");\n      } else {\n        // Caso algo esteja fora das políticas do contrato\n        setMensagem(\"Transação vai contra regras do contrato\");\n      }\n    }\n  };\n\n  const mostraGanhador = function () {//console.log(loteria.options.address); \n    //  setMensagem(setWinner());\n    // console.log(vencedor);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contrato de Loteria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Este contrato \\xE9 gerenciado por \", gerente]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Existem agora \", jogadores.length, \" pessoas apostando para ganhar\", \" \", web3.utils.fromWei(saldo, \"ether\"), \" ether\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: apostar,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Quanto deseja apostar?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantidade de ether para ser enviado: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: value // Altera o valor que está sendo apostado\n          ,\n          onChange: event => setValue(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Jogar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Realizar sorteio? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortear,\n      children: \" Sortear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Mostrar Ganhador! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mostraGanhador,\n      children: \" Mostrar Sorteado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", vencedor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"yVIOXEN7sknGlK4T3ftNffRLB3I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","web3","loteria","App","gerente","setGerente","jogadores","setJogadores","saldo","setSaldo","value","setValue","mensagem","setMensagem","vencedor","setWinner","carregarDados","_gerente","methods","call","_jogadores","getJogadores","_saldo","eth","getBalance","options","address","_vencedor","apostar","event","preventDefault","contas","getAccounts","jogar","send","from","utils","toWei","error","code","sortear","sorteio","mostraGanhador","length","fromWei","target"],"sources":["C:/Users/aless/OneDrive/Área de Trabalho/LOTERIA-REACT/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// Configuração para requisições na rede\r\nimport web3 from \"./web3\";\r\n// Informação do contrato\r\nimport loteria from \"./loteria\";\r\n\r\nconst App = () => {\r\n  // Cria variáveis e funções de alteração\r\n  const [gerente, setGerente] = useState(\"\");\r\n  const [jogadores, setJogadores] = useState(\"\");\r\n  const [saldo, setSaldo] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const [mensagem, setMensagem] = useState(\"\");\r\n  //Alterei aqui\r\n  const [vencedor, setWinner] = useState(0);\r\n\r\n  // Função assincrona que carrega os dados do contrato\r\n  const carregarDados = async () => {\r\n    // Pega a carteira do gerente do contrato\r\n    const _gerente = await loteria.methods.gerente().call();\r\n    // Pega a carteira dos jogadores\r\n    const _jogadores = await loteria.methods.getJogadores().call();\r\n    // Pega o valor total vinculado ao contrato\r\n    const _saldo = await web3.eth.getBalance(loteria.options.address);\r\n    //Alterado aqui\r\n    const _vencedor = await loteria.methods.vencedor();\r\n    //console.log(_vencedor);\r\n\r\n    // Armazena os valores nas variáveis de gerente, jogador e saldo\r\n    setGerente(_gerente);\r\n    setJogadores(_jogadores);\r\n    setSaldo(_saldo);\r\n    setValue(\"\");\r\n    //vencedor = _vencedor;\r\n    //setWinner(_vencedor);\r\n  };\r\n  // Antes da página carregar ele chama seu conteúdo\r\n  useEffect(() => {\r\n    // Busca dados do contrato\r\n    carregarDados();\r\n  }, []);\r\n\r\n  // * Realiza uma aposta\r\n  const apostar = async (event) => {\r\n    try {\r\n      // Evita que a página seja recarregada\r\n      event.preventDefault();\r\n      // Altera valor da mensagem exibida\r\n      setMensagem(\"Aguardando a  validação da transação...\");\r\n      // Pega contas do metamask\r\n      const contas = await web3.eth.getAccounts();\r\n      // console.log(contas);\r\n\r\n      // Joga passando valor da conta principal e o valor de ether em wei\r\n      await loteria.methods.jogar().send({\r\n        from: contas[0],\r\n        value: web3.utils.toWei(value, \"ether\"),\r\n      });\r\n      // Recarrega dados da página\r\n      await carregarDados();\r\n      // Altera mensagem\r\n      setMensagem(\"Transação concluida!\");\r\n    } catch (error) {\r\n      // Caso o usuário cancele a solicitação no metamask\r\n      if (error.code === 4001) {\r\n        setMensagem(\"Transação cancelada!\");\r\n      } else {\r\n        // Caso algo esteja fora das políticas do contrato\r\n        setMensagem(\"Transação vai contra regras do contrato\");\r\n      }\r\n    }\r\n  };\r\n  // * Realiza sorteio\r\n  const sortear = async () => {\r\n    try {\r\n      // Altera mensagem\r\n      setMensagem(\"Aguardando processamento...\");\r\n      // Pega contas do metamask\r\n      const contas = await web3.eth.getAccounts();\r\n      // Solicita sorte e manda conta que está realizando o sorteio\r\n      await loteria.methods.sorteio().send({\r\n        from: contas[0],\r\n      });\r\n      // Recarrega dados da página\r\n      await carregarDados();\r\n      // Altera mensagem\r\n      setMensagem(\"Um vencedor foi escolhido!\");\r\n    } catch (error) {\r\n      // Caso o usuário cancele a solicitação no metamask\r\n      if (error.code === 4001) {\r\n        setMensagem(\"Transação cancelada!\");\r\n      } else {\r\n        // Caso algo esteja fora das políticas do contrato\r\n        setMensagem(\"Transação vai contra regras do contrato\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const mostraGanhador = function (){\r\n    //console.log(loteria.options.address); \r\n  //  setMensagem(setWinner());\r\n  // console.log(vencedor);\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Contrato de Loteria</h2>\r\n      <p>Este contrato é gerenciado por {gerente}</p>\r\n      <p>\r\n        Existem agora {jogadores.length} pessoas apostando para ganhar{\" \"}\r\n        {web3.utils.fromWei(saldo, \"ether\")} ether\r\n      </p>\r\n      <br />\r\n      <form onSubmit={apostar}>\r\n        <h4>Quanto deseja apostar?</h4>\r\n        <div>\r\n          <label>Quantidade de ether para ser enviado: </label>\r\n          <input\r\n            value={value}\r\n            // Altera o valor que está sendo apostado\r\n            onChange={(event) => setValue(event.target.value)}\r\n          />\r\n        </div>\r\n        <button>Jogar</button>\r\n      </form>\r\n      <hr />\r\n      <h4>Realizar sorteio? </h4>\r\n      <button onClick={sortear}> Sortear</button>\r\n      <hr />\r\n      <h4>Mostrar Ganhador! </h4>\r\n      <button onClick={mostraGanhador}> Mostrar Sorteado</button>\r\n      <p> {vencedor}</p>\r\n      <hr />\r\n      {/* Mostra mensagem ao usuário */}\r\n      <h1>{mensagem}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}